一、call()和apply()的区别?

两个在作用上是相同的，都是调用一个对象的一个方法，以另一个对象替换当前对象。将一个函数的上下文从初始的上下文改变为由thisObj指定的新对象。

两者在参数上是有区别的，第一个参数都一样，但第二个参数：apply传入的是一个参数数组，也就是将多个参数组合成为一个数组传入，call作为call的参数传入，是单个值。

二、javascript原型，原型链，有什么特点?

原型对象也是普通的对象，是对象一个自带隐式的__proto__属性，原型也有可能有自己的原型，如果一个原型对象的原型不为null的话，称为原型链。

原型链是由一些用来继承和共享属性的对象组成的（有限的）对象链。

三、什么是闭包?

简单理解就是函数的嵌套形成闭包，常用的两个作用:

1.读取函数内部的变量值

2.使变量值一直保存在内存中

注：不能滥用闭包，由于函数内部的变量都被保存在内存中，导致内存消耗很大。

四、javascript中的垃圾回收机制?

在javascript中，如果一个对象不再被引用，那么这个对象就会被GC回收。如果两个对象互相引用，而不再被第三者引用，那么这两个互相引用的对象也会被回收。因为函数a被b引用，b又被a

外的c引用，这就是为什么函数a执行后不会被回收的原因。

五、面向对象和类的区别?

简单的说类是对象的模版。在js中没有类，所以在js中所谓的类就是构造函数，对象就是由构造函数创建出来的实例对象。面向对象就是使用面向对象的方式处理问题，面向对象是对面向过程

进行封装。

面向对象的三大特性：

抽象性、封装性、继承性。

六、继承的方式：

	1.借用构造函数

	2.组合继续

	3.原型链继承

	4.寄生式继承

	5.寄生组合式继承




